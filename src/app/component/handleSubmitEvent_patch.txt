Corrected handleSubmitEvent function for event.tsx:

const handleSubmitEvent = async (e) => {
  e.preventDefault();
  setIsLoading(true);

  try {
    const requiredFields = ["title", "date", "location", "description"];
    const missingFields = requiredFields.filter(
      (field) => !(editingEvent || newEvent)[field]
    );

    if (missingFields.length > 0) {
      throw new Error(`Vui lòng nhập: ${missingFields.join(", ")}`);
    }

    const formData = new FormData();
    formData.append("name", (editingEvent || newEvent).title);
    formData.append("time", (editingEvent || newEvent).date);
    formData.append("location", (editingEvent || newEvent).location);
    formData.append("description", (editingEvent || newEvent).description);

    const images = (editingEvent || newEvent).images || [];
    images.forEach((imageFile) => {
      if (imageFile instanceof File) {
        formData.append("images", imageFile);
      }
    });

    const token = localStorage.getItem("authToken");
    const url = editingEvent
      ? `http://localhost:8080/api/events/${editingEvent.id}`
      : "http://localhost:8080/api/events";
    const method = editingEvent ? "PUT" : "POST";

    const response = await fetch(url, {
      method,
      headers: {
        Authorization: token ? `Bearer ${token}` : "",
        // Removed Content-Type header to let browser set it for FormData
      },
      body: formData,
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error("Fetch error response text:", errorText);
      throw new Error("Request failed");
    }

    const data = await response.json();

    toast.success(
      editingEvent
        ? "Cập nhật sự kiện thành công!"
        : "Thêm sự kiện thành công!"
    );
    await fetchEvents();

    setNewEvent({
      title: "",
      date: "",
      location: "",
      description: "",
      images: [],
    });
    setEditingEvent(null);
    setImagePreviews([]);
  } catch (error) {
    console.error("Fetch error:", error);
    toast.error(error.message || "Lỗi khi kết nối đến server");
  } finally {
    setIsLoading(false);
  }
};
